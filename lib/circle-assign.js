// https://cdn.jsdelivr.net/npm/circle-assign@2.0.0/dist/circle-assign.min.js
"use strict";
(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?module.exports=factory():typeof define==="function"&&define.amd?define(factory):global.circleAssign=factory()})(this,function(){"use strict";function isObj(o){return o instanceof Object&&o.constructor===Object}function mergeObject(target,source){var targetObject=target;var sourceObject=source;if(!isObj(target)){targetObject={}}if(!isObj(source)){sourceObject={}}var targetKeys=Object.keys(targetObject);var sourceKeys=Object.keys(sourceObject);var result={};targetKeys.forEach(function(key){if(sourceKeys.indexOf(key)!==-1){if(targetObject[key]===null){result[key]=sourceObject[key]}else if(isObj(targetObject[key])){if(isObj(sourceObject[key])){result[key]=mergeObject(targetObject[key],sourceObject[key])}else{result[key]=sourceObject[key]}}else{result[key]=sourceObject[key]}}else{result[key]=targetObject[key]}});sourceKeys.forEach(function(key){if(targetKeys.indexOf(key)===-1){result[key]=sourceObject[key]}});return result}function merge(target){var targetObject=target;if(!isObj(target)){targetObject={}}for(var _len=arguments.length,sources=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){sources[_key-1]=arguments[_key]}sources.forEach(function(s){if(isObj(s)){targetObject=mergeObject(targetObject,s)}});return targetObject}return merge});
